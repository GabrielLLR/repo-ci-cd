name: Update Tag on PR Merge

on:
  repository_dispatch:
    types: [update-tag]

jobs:
  update-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Print received information
        run: |
          echo "Repository: ${{ github.event.client_payload.repository }}"
          echo "Branch: ${{ github.event.client_payload.branch }}"
          echo "Swagger Version: ${{ github.event.client_payload.version }}"
          echo "Swagger Title: ${{ github.event.client_payload.title }}"

      - name: Remove existing tag (if exists) via API
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" \
          "https://api.github.com/repos/${{ github.event.client_payload.repository }}/git/refs/tags/${{ github.event.client_payload.version }}")
          if [ "$RESPONSE" == "204" ]; then
            echo "Tag ${{ github.event.client_payload.version }} removed successfully"
          else
            echo "No existing tag ${{ github.event.client_payload.version }} to remove or failed request"
          fi

      - name: Create new tag via API
        run: |
          SHA=$(curl -s -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" \
          "https://api.github.com/repos/${{ github.event.client_payload.repository }}/git/ref/heads/${{ github.event.client_payload.branch }}" | jq -r .object.sha)
          
          curl -X POST -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "{\"ref\": \"refs/tags/${{ github.event.client_payload.version }}\", \"sha\": \"$SHA\"}" \
          "https://api.github.com/repos/${{ github.event.client_payload.repository }}/git/refs"

      - name: Print tag link
        run: |
          echo "Tag created: https://github.com/${{ github.event.client_payload.repository }}/releases/tag/${{ github.event.client_payload.version }}"
